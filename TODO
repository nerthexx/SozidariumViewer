- Fetch URL should be in index.html. WASM will access it via exports.

- File with map data (player bases) should also contain seed and rectangular area descriptions. 

- Optimize rendering. Basically, we would need to change from plain SDL2 to OpenGL 2.0 ES. Main optimization here is how circles are rendered. 
Preferably, use SDF-rendering. More on that:
  https://stackoverflow.com/questions/64170321/how-to-draw-a-smooth-circle-with-a-border-in-glsl
  http://www.numb3r23.net/2015/08/17/using-fwidth-for-distance-based-anti-aliasing/

- Optimize tile generation and rendering. This one is tricky. 
Right now we use what Cubiomes gives us: different layers at different zoom levels, in the way they are used by minecraft. 
This doesn't look very great because different layers lack some features, like rivers and sub-biomes.
Right now, for speeds, we sample an 'area' of these layers.
However, a better approach would be to just sample 1 block at some worldposition. We could construct different lods based on that. 
Also, an optimization for that would be to reuse higher lod data to construct lower lod data (reuse of pixels, basically). Also, could just cache pixels.
Also, construct all lod levels at current view. Even the ones we don't see. Why? So, right now, when we zoom, there is a delay between the lod switch, resulting in "flicker"-like effect.
To combat that, we could also just use a quadtree, or some other data structure. Zooming-in should give more details over time, without deleting what we previously generated. 

- Add player icons to their bases.

- Add villages and other crap on the map.

- Add support for end. Place end city icons where they belong.
In ideal world, it would be interactive, so you could just toggle raided end cities on and off. Player's name would appear in the description, i.e who raided it.

- Maybe nether with a hub, player portals and their tunnels.

- Improve overall graphics. Right now it's okay, but ideally text should be more readable, map should be more readable, good for screenshots, etc..
